{"ast":null,"code":"class MessageParser {\n  constructor(actionProvider) {\n    this.actionProvider = actionProvider;\n  }\n\n  parse(message) {\n    console.log(message);\n    const lowercase = [message.toLowerCase()];\n    console.log(lowercase);\n\n    if (lowercase.includes(\"hello\") || lowercase.includes(\"hi\")) {\n      this.actionProvider.greet();\n    } else if (lowercase.includes(\"javascript\") || lowercase.includes(\"js\")) {\n      this.actionProvider.handleJavascriptQuiz();\n    } else if (lowercase.includes(\"what is academic misconduct ?\") || lowercase.includes(\"academic misconduct\") || lowercase.includes(\"misconduct\")) {\n      this.actionProvider.misconduct();\n    } else if (lowercase.includes(\"guidelines\") || lowercase.includes(\"academic guidelines\")) {\n      this.actionProvider.guideLines();\n    } else if (lowercase.includes(\"what is your name ?\") || lowercase.includes(\"name\") || lowercase.includes(\"whats your name\")) {\n      this.actionProvider.name();\n    } else if (lowercase.includes(\"python\") || lowercase.includes(\"py\")) {\n      this.actionProvider.handlepyhtonQuiz();\n    } else {\n      this.actionProvider.unKnown();\n    }\n  }\n\n}\n\nexport default MessageParser;","map":{"version":3,"sources":["C:/Users/erbos/OneDrive/Desktop/AM-preventation/client/Am-preventation/src/app/chatbot/messageParser.js"],"names":["MessageParser","constructor","actionProvider","parse","message","console","log","lowercase","toLowerCase","includes","greet","handleJavascriptQuiz","misconduct","guideLines","name","handlepyhtonQuiz","unKnown"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,cAAD,EAAiB;AAC1B,SAAKA,cAAL,GAAsBA,cAAtB;AACD;;AAEDC,EAAAA,KAAK,CAACC,OAAD,EAAU;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,UAAMG,SAAS,GAAG,CAACH,OAAO,CAACI,WAAR,EAAD,CAAlB;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAYC,SAAZ;;AACA,QAAIA,SAAS,CAACE,QAAV,CAAmB,OAAnB,KAA+BF,SAAS,CAACE,QAAV,CAAmB,IAAnB,CAAnC,EAA6D;AAC3D,WAAKP,cAAL,CAAoBQ,KAApB;AACD,KAFD,MAEO,IAAIH,SAAS,CAACE,QAAV,CAAmB,YAAnB,KAAoCF,SAAS,CAACE,QAAV,CAAmB,IAAnB,CAAxC,EAAkE;AACvE,WAAKP,cAAL,CAAoBS,oBAApB;AACD,KAFM,MAED,IAAIJ,SAAS,CAACE,QAAV,CAAmB,+BAAnB,KAAuDF,SAAS,CAACE,QAAV,CAAmB,qBAAnB,CAAvD,IAAoGF,SAAS,CAACE,QAAV,CAAmB,YAAnB,CAAxG,EAA0I;AAC9I,WAAKP,cAAL,CAAoBU,UAApB;AACD,KAFK,MAEC,IAAIL,SAAS,CAACE,QAAV,CAAmB,YAAnB,KAAoCF,SAAS,CAACE,QAAV,CAAmB,qBAAnB,CAAxC,EAAmF;AACxF,WAAKP,cAAL,CAAoBW,UAApB;AACD,KAFM,MAEA,IACLN,SAAS,CAACE,QAAV,CAAmB,qBAAnB,KACAF,SAAS,CAACE,QAAV,CAAmB,MAAnB,CADA,IAEAF,SAAS,CAACE,QAAV,CAAmB,iBAAnB,CAHK,EAIL;AACA,WAAKP,cAAL,CAAoBY,IAApB;AACD,KANM,MAMA,IAAIP,SAAS,CAACE,QAAV,CAAmB,QAAnB,KAAgCF,SAAS,CAACE,QAAV,CAAmB,IAAnB,CAApC,EAA8D;AACnE,WAAKP,cAAL,CAAoBa,gBAApB;AACD,KAFM,MAEA;AACL,WAAKb,cAAL,CAAoBc,OAApB;AACD;AACF;;AA5BiB;;AA+BpB,eAAehB,aAAf","sourcesContent":["class MessageParser {\r\n  constructor(actionProvider) {\r\n    this.actionProvider = actionProvider;\r\n  }\r\n\r\n  parse(message) {\r\n    console.log(message);\r\n    const lowercase = [message.toLowerCase()];\r\n    console.log(lowercase);\r\n    if (lowercase.includes(\"hello\") || lowercase.includes(\"hi\")) {\r\n      this.actionProvider.greet();\r\n    } else if (lowercase.includes(\"javascript\") || lowercase.includes(\"js\")) {\r\n      this.actionProvider.handleJavascriptQuiz();\r\n    }else if (lowercase.includes(\"what is academic misconduct ?\") || lowercase.includes(\"academic misconduct\") || lowercase.includes(\"misconduct\")) {\r\n      this.actionProvider.misconduct();\r\n    } else if (lowercase.includes(\"guidelines\") || lowercase.includes(\"academic guidelines\")) {\r\n      this.actionProvider.guideLines();\r\n    } else if (\r\n      lowercase.includes(\"what is your name ?\") ||\r\n      lowercase.includes(\"name\") ||\r\n      lowercase.includes(\"whats your name\")\r\n    ) {\r\n      this.actionProvider.name();\r\n    } else if (lowercase.includes(\"python\") || lowercase.includes(\"py\")) {\r\n      this.actionProvider.handlepyhtonQuiz();\r\n    } else {\r\n      this.actionProvider.unKnown();\r\n    }\r\n  }\r\n}\r\n\r\nexport default MessageParser;\r\n"]},"metadata":{},"sourceType":"module"}