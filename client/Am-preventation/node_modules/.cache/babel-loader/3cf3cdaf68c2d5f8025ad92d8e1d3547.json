{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\erbos\\\\OneDrive\\\\Desktop\\\\AM-preventation\\\\client\\\\Am-preventation\\\\src\\\\app\\\\quiz\\\\quiz.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./quiz.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams, withRouter } from \"react-router\";\nimport { finishAttempt } from \"../../redux/quiz/quiz-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Quiz = ({\n  history\n}) => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const dispatch = useDispatch();\n  const [_quiz] = useSelector(state => state._quizes.quizes.filter(quiz => quiz._id === id));\n\n  const _user = useSelector(state => state._user.currentUser);\n\n  const [marks, setMarks] = useState(0);\n  const [answers, setAnswers] = useState([]);\n  const [totalNumber, setTotalNumber] = useState(0);\n  const [questionAndAnswers, setQuestionAndAnswers] = useState();\n\n  const onQuestionAnswered = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    setTotalNumber(questionAndAnswers.length);\n    let questionAnsweredWith = {\n      question: name,\n      answer: value\n    };\n\n    if (questionAndAnswers.some(question => question.answer === questionAnsweredWith.answer)) {\n      setMarks(marks + 1);\n    } else console.log(questionAndAnswers);\n  };\n\n  const onFinishAttempt = async () => {\n    // console.log(\n    //   _quiz.quiz_content.map((question) => {\n    //     // if(question.question===answers)\n    //     console.log(question);\n    //   })\n    // );\n    const response = await dispatch(finishAttempt({\n      userId: _user._id,\n      quizId: _quiz._id,\n      marks: marks / totalNumber * 100\n    }));\n    if (response) history.push(\"/Profile/Quizes\");\n    console.log(marks);\n  };\n\n  useEffect(() => {\n    setQuestionAndAnswers(_quiz.quiz_content.map(question => ({\n      question: question.question,\n      answer: question.answer\n    })));\n    return () => setMarks(0);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"wrap\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row gutters\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card h-100\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-body\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: _quiz.quiz_name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this), _quiz.quiz_content.map((question, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"cardsm\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"bodysm\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"que-padding\",\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"text\",\n                        className: \"form-control\",\n                        value: question.question,\n                        readOnly: true\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 76,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 25\n                    }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"opt-sm\",\n                      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"Radio\",\n                        name: question.question,\n                        value: option,\n                        id: option,\n                        onChange: onQuestionAnswered\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 86,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                        for: option,\n                        children: option\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 93,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 27\n                    }, this))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: onFinishAttempt,\n                  children: \"Finish Attempt\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quiz, \"SuzUBpH5V6uWXoJQAl2prcZxdBY=\", false, function () {\n  return [useParams, useDispatch, useSelector, useSelector];\n});\n\n_c = Quiz;\nexport default _c2 = withRouter(Quiz);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Quiz\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["C:/Users/erbos/OneDrive/Desktop/AM-preventation/client/Am-preventation/src/app/quiz/quiz.js"],"names":["axios","React","useEffect","useState","useDispatch","useSelector","useParams","withRouter","finishAttempt","Quiz","history","id","dispatch","_quiz","state","_quizes","quizes","filter","quiz","_id","_user","currentUser","marks","setMarks","answers","setAnswers","totalNumber","setTotalNumber","questionAndAnswers","setQuestionAndAnswers","onQuestionAnswered","e","value","name","target","length","questionAnsweredWith","question","answer","some","console","log","onFinishAttempt","response","userId","quizId","push","quiz_content","map","quiz_name","index","options","option","i"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./quiz.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams, withRouter } from \"react-router\";\r\nimport { finishAttempt } from \"../../redux/quiz/quiz-actions\";\r\n\r\nconst Quiz = ({ history }) => {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const [_quiz] = useSelector((state) =>\r\n    state._quizes.quizes.filter((quiz) => quiz._id === id)\r\n  );\r\n\r\n  const _user = useSelector((state) => state._user.currentUser);\r\n  const [marks, setMarks] = useState(0);\r\n  const [answers, setAnswers] = useState([]);\r\n  const [totalNumber, setTotalNumber] = useState(0);\r\n  const [questionAndAnswers, setQuestionAndAnswers] = useState();\r\n  const onQuestionAnswered = (e) => {\r\n    const { value, name } = e.target;\r\n\r\n    setTotalNumber(questionAndAnswers.length);\r\n\r\n    let questionAnsweredWith = { question: name, answer: value };\r\n\r\n    if (\r\n      questionAndAnswers.some(\r\n        (question) => question.answer === questionAnsweredWith.answer\r\n      )\r\n    ) {\r\n      setMarks(marks + 1);\r\n    } else console.log(questionAndAnswers);\r\n  };\r\n  const onFinishAttempt = async () => {\r\n    // console.log(\r\n    //   _quiz.quiz_content.map((question) => {\r\n    //     // if(question.question===answers)\r\n    //     console.log(question);\r\n    //   })\r\n    // );\r\n    const response = await dispatch(\r\n      finishAttempt({\r\n        userId: _user._id,\r\n        quizId: _quiz._id,\r\n        marks: (marks / totalNumber) * 100,\r\n      })\r\n    );\r\n    if (response) history.push(\"/Profile/Quizes\");\r\n    console.log(marks);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setQuestionAndAnswers(\r\n      _quiz.quiz_content.map((question) => ({\r\n        question: question.question,\r\n        answer: question.answer,\r\n      }))\r\n    );\r\n    return () => setMarks(0);\r\n  }, []);\r\n  return (\r\n    <div className=\"wrap\">\r\n      <div className=\"main\">\r\n        <div className=\"info\">\r\n          <div className=\"row gutters\">\r\n            <div className=\"col-xl-9 col-lg-9 col-md-12 col-sm-12 col-12\">\r\n              <div className=\"card h-100\">\r\n                <div className=\"card-body\">\r\n                  <h3>{_quiz.quiz_name}</h3>\r\n\r\n                  {_quiz.quiz_content.map((question, index) => (\r\n                    <div className=\"cardsm\">\r\n                      <div className=\"bodysm\">\r\n                        <div className=\"que-padding\">\r\n                          <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            value={question.question}\r\n                            readOnly\r\n                          />\r\n                        </div>\r\n                        {/* <h2>Answer: {question.answer}</h2> */}\r\n                        {question.options.map((option, i) => (\r\n                          <div className=\"opt-sm\">\r\n                            <input\r\n                              type=\"Radio\"\r\n                              name={question.question}\r\n                              value={option}\r\n                              id={option}\r\n                              onChange={onQuestionAnswered}\r\n                            />\r\n                            <label for={option}>{option}</label>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n\r\n                  <button className=\"btn btn-success\" onClick={onFinishAttempt}>\r\n                    Finish Attempt\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Quiz);\r\n"]},"metadata":{},"sourceType":"module"}