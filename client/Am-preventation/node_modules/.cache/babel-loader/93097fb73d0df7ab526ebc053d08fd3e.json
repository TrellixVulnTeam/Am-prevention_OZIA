{"ast":null,"code":"import { FaqActionTypes } from \"./faq-types\";\nimport axios from \"axios\"; //Thunk Actions\n\nexport const getFaqs = () => {\n  return dispatch => {\n    return new Promise(async resolve => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/faq\");\n\n        if (response) {\n          dispatch(setFaqs(response.data.faqs));\n          resolve(true);\n        }\n      } catch (error) {\n        console.log(error);\n        resolve(false);\n      }\n    });\n  };\n};\nexport const createFaq = data => {\n  return dispatch => {\n    return new Promise(async resolve => {\n      try {\n        const response = await axios.post(\"http://localhost:5000/api/faq\", data);\n        if (response) resolve(true);\n      } catch (error) {\n        console.log(error);\n        resolve(false);\n      }\n    });\n  };\n}; //Pure Actions\n\nexport const setFaqs = data => ({\n  type: FaqActionTypes.SET_FAQ,\n  payload: data\n});","map":{"version":3,"sources":["C:/Users/erbos/OneDrive/Desktop/AM-preventation/client/Am-preventation/src/redux/faq/faq-actions.js"],"names":["FaqActionTypes","axios","getFaqs","dispatch","Promise","resolve","response","get","setFaqs","data","faqs","error","console","log","createFaq","post","type","SET_FAQ","payload"],"mappings":"AAAA,SAASA,cAAT,QAA+B,aAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,SAAQC,QAAD,IAAc;AACnB,WAAO,IAAIC,OAAJ,CAAY,MAAOC,OAAP,IAAmB;AACpC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,GAAN,CAAU,+BAAV,CAAvB;;AACA,YAAID,QAAJ,EAAc;AACZH,UAAAA,QAAQ,CAACK,OAAO,CAACF,QAAQ,CAACG,IAAT,CAAcC,IAAf,CAAR,CAAR;AACAL,UAAAA,OAAO,CAAC,IAAD,CAAP;AACD;AACF,OAND,CAME,OAAOM,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KAXM,CAAP;AAYD,GAbD;AAcD,CAfM;AAiBP,OAAO,MAAMS,SAAS,GAAIL,IAAD,IAAU;AACjC,SAAQN,QAAD,IAAc;AACnB,WAAO,IAAIC,OAAJ,CAAY,MAAOC,OAAP,IAAmB;AACpC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAML,KAAK,CAACc,IAAN,CACrB,+BADqB,EAErBN,IAFqB,CAAvB;AAIA,YAAIH,QAAJ,EAAcD,OAAO,CAAC,IAAD,CAAP;AACf,OAND,CAME,OAAOM,KAAP,EAAc;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAN,QAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF,KAXM,CAAP;AAYD,GAbD;AAcD,CAfM,C,CAiBP;;AACA,OAAO,MAAMG,OAAO,GAAIC,IAAD,KAAW;AAChCO,EAAAA,IAAI,EAAEhB,cAAc,CAACiB,OADW;AAEhCC,EAAAA,OAAO,EAAET;AAFuB,CAAX,CAAhB","sourcesContent":["import { FaqActionTypes } from \"./faq-types\";\r\nimport axios from \"axios\";\r\n\r\n//Thunk Actions\r\nexport const getFaqs = () => {\r\n  return (dispatch) => {\r\n    return new Promise(async (resolve) => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/faq\");\r\n        if (response) {\r\n          dispatch(setFaqs(response.data.faqs));\r\n          resolve(true);\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n        resolve(false);\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const createFaq = (data) => {\r\n  return (dispatch) => {\r\n    return new Promise(async (resolve) => {\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://localhost:5000/api/faq\",\r\n          data\r\n        );\r\n        if (response) resolve(true);\r\n      } catch (error) {\r\n        console.log(error);\r\n        resolve(false);\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\n//Pure Actions\r\nexport const setFaqs = (data) => ({\r\n  type: FaqActionTypes.SET_FAQ,\r\n  payload: data,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}